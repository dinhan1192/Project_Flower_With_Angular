@model Project_MVC.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@Styles.Render("~/box")

@*<h4>Use another service to log in.</h4>*@
@*<hr />*@
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Accounts", FormMethod.Post, new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
<div class="loginlink">
    @foreach (AuthenticationDescription p in loginProviders)
    {   
        
        if (p.AuthenticationType == "Facebook")
        {
              <button class="loginBtn loginBtn--facebook" style="padding:0 15px 0 46px;" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">Login With @p.AuthenticationType</button>
        }
        else
        {
             <button class="loginBtn loginBtn--google" style="padding:0 15px 0 46px;" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">Login With @p.AuthenticationType</button>
        }

    }
</div>
        }
    }
}
